{"version":3,"sources":["./src/environments/environment.ts","./src/app/common/error.ts","./src/app/common/error.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/portal/portal.component.ts","./src/app/portal/portal.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACuB;;;;;AAUlE,MAAM,WAAW;IAEpB,YACW,SAAoC,EACX,IAAe;QADxC,cAAS,GAAT,SAAS,CAA2B;QACX,SAAI,GAAJ,IAAI,CAAW;IAC/C,CAAC;IACL,EAAE;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;;sEARQ,WAAW,0MAIR,wEAAe;2FAJlB,WAAW;QCXxB,wEAAqB;QAAA,kEAAO;QAAA,4DAAK;QACjC,yEACI;QAAA,uEAAO;QAAA,uDAAQ;QAAA,4DAAO;QAC1B,4DAAM;QACN,yEACI;QAAA,4EAAwD;QAAf,mIAAS,QAAI,IAAC;QAAC,6DAAE;QAAA,4DAAS;QACvE,4DAAM;;QAJK,0DAAQ;QAAR,mFAAQ;;6FDSN,WAAW;cAJvB,uDAAS;eAAC;gBACP,QAAQ,EAAE,OAAO;gBACjB,WAAW,EAAE,YAAY;aAC5B;;sBAKQ,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEf/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,iFACI;QAAA,oEACA;QAAA,0EAAoB;QAAA,gFAAqB;QAAA,4DAAO;QACpD,4DAAc;QAId,2EAA+B;;6FDAlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACU;AACG;AACf;AAEkC;AACvB;AACuB;AAC1B;AAEE;AACG;AACG;AACF;AACJ;AACA;AACS;AACH;;AA8BtD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAjBJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,qEAAgB;YAChB,qEAAgB;YAChB,0EAAqB;YACrB,mEAAmB;YACnB,qEAAa;YACb,yEAAe;YACf,2EAAgB;YAChB,yEAAe;YACf,qEAAa;YACb,qEAAa;YACb,8EAAiB;YACjB,2EAAgB;SACjB;mIAIU,SAAS,mBAzBlB,2DAAY;QACZ,qEAAc;QACd,wEAAe;QACf,yDAAW,aAGX,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,qEAAgB;QAChB,qEAAgB;QAChB,0EAAqB;QACrB,mEAAmB;QACnB,qEAAa;QACb,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,qEAAa;QACb,qEAAa;QACb,8EAAiB;QACjB,2EAAgB;6FAKP,SAAS;cA3BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,wEAAe;oBACf,yDAAW;iBACZ;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,qEAAgB;oBAChB,qEAAgB;oBAChB,0EAAqB;oBACrB,mEAAmB;oBACnB,qEAAa;oBACb,yEAAe;oBACf,2EAAgB;oBAChB,yEAAe;oBACf,qEAAa;oBACb,qEAAa;oBACb,8EAAiB;oBACjB,2EAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAML;;;;;;;;;;;;;;ICDjC,qEAA8E;;;IAC9E,kFAA2F;;;IAGhF,uEAA+B;IAAA,uDAAmB;IAAA,4DAAO;;;IAA1B,0DAAmB;IAAnB,iGAAmB;;;IAIzD,gFACI;IAAA,+EAA2B;IAAA,uDAAY;IAAA,4DAAW;IAClD,0EACI;IAAA,uEAAM;IAAA,uDAAY;IAAA,4DAAO;IACzB,yEAA2B;IAC/B,4DAAM;IACV,4DAAgB;;;IALe,0DAAY;IAAZ,4EAAY;IAE7B,0DAAY;IAAZ,4EAAY;;ADHnC,MAAM,eAAe;IAE1B,YAAoB,OAAe,EAAU,KAAiB,EAAQ,OAAkB,EAAU,SAAsB;QAApG,YAAO,GAAP,OAAO,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAY;QAAQ,YAAO,GAAP,OAAO,CAAW;QAAU,cAAS,GAAT,SAAS,CAAa;QAExH,SAAI,GAAG;YACL,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,+CAA+C;YACtD,QAAQ,EAAE,sCAAsC;YAChD,IAAI,EAAE;gBACJ;oBACE,IAAI,EAAE,yGAAyG;oBAC/G,IAAI,EAAE,UAAU;iBACjB;gBACD;oBACE,IAAI,EAAE,wGAAwG;oBAC9G,IAAI,EAAE,aAAa;iBACpB;gBACD;oBACE,IAAI,EAAE,+EAA+E;oBACrF,IAAI,EAAE,OAAO;iBACd;gBACD;oBACE,IAAI,EAAE,iEAAiE;oBACvE,IAAI,EAAE,eAAe;iBACtB;gBACD;oBACE,IAAI,EAAE,mFAAmF;oBACzF,IAAI,EAAE,SAAS;iBAChB;gBACD;oBACE,IAAI,EAAE,mHAAmH;oBACzH,IAAI,EAAE,YAAY;iBACnB;aACF;YACD,QAAQ,EAAE,WAAW;YACrB,cAAc,EAAE,eAAe;YAC/B,aAAa,EAAE,sBAAsB;YACrC,MAAM,EAAE,eAAe;YACvB,qBAAqB,EAAE,0BAA0B;YACjD,uBAAuB,EAAE,0BAA0B;SACpD;QAED,SAAI,GAAG;YACL,UAAU,EAAC,EAAE;YACb,SAAS,EAAC,EAAE;YACZ,KAAK,EAAE,EAAE;SACV;QAED,QAAG,GAAG,EAAE;QACR,SAAI,GAAG,EAAE;QAET,cAAS,GAAG,KAAK;QACjB,cAAS,GAAG,KAAK;IAlD2G,CAAC;IAoD7H,QAAQ;IACR,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,mBAAmB,CAAC,CAAC,SAAS,CAAC;YACjD,IAAI,EAAE,IAAI,CAAC,EAAE;gBACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;oBAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;oBACrB,IAAI,CAAC,SAAS,GAAG,KAAK;YACxB,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,IAAI,OAAO,GAAW,4DAA4D;gBAClF,IAAI,OAAO,IAAI,KAAK,EAAE;oBAAE,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;iBAAE;gBAC9D,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACzB,CAAC;SACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,kBAAkB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC;YACrD,IAAI,EAAE,IAAI,CAAC,EAAE;gBACX,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG;gBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC;YAC1D,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,IAAI,OAAO,GAAW,4DAA4D;gBAClF,IAAI,OAAO,IAAI,KAAK,EAAE;oBAAE,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;iBAAE;gBAC9D,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACzB,CAAC;SACF,CAAC;IACJ,CAAC;IACD,WAAW;QAAc,IAAI,CAAC,SAAS,GAAG,IAAI;QAC5C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAM,kBAAkB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC;YACvD,IAAI,EAAE,IAAI,CAAC,EAAE;gBACX,IAAI,CAAC,GAAG,GAAG,EAAE;gBACb,IAAI,CAAC,IAAI,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC;YAC5D,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,IAAI,OAAO,GAAW,4DAA4D;gBAClF,IAAI,OAAO,IAAI,KAAK,EAAE;oBAAE,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;iBAAE;gBAC9D,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACzB,CAAC;SACF,CAAC;IACJ,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK;IACxB,CAAC;IACD,aAAa;IAEb,CAAC;IACD,8EAA8E;IAC9E,4BAA4B;IAC5B,8EAA8E;IAC9E,QAAQ;IACR,SAAS,CAAC,OAAe;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,yDAAW,EAAE;YAC/C,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;IACL,CAAC;IAED,YAAY;IACZ,YAAY,CAAC,OAAe,EAAE,MAAc;QAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;YACnC,QAAQ,EAAE,IAAI;YACd,kBAAkB,EAAE,QAAQ;YAC5B,gBAAgB,EAAE,KAAK;SACxB,CAAC,CAAC;IACL,CAAC;;8EAnIU,eAAe;+FAAf,eAAe;QCb5B,yEACI;QAAA,8EACI;QAAA,iFACI;QAAA,uDACA;QACA,2GAAwE;QACxE,qIAAwE;QAC5E,4DAAiB;QACjB,oFACI;QAAA,uDAAW;QAAA,6GAA+B;QAA0B,uDACxE;QAAA,4DAAoB;QACpB,oFACI;QAAA,4EACI;QAAA,iIACI;QAMR,4DAAW;QACf,4DAAmB;QACnB,oFACI;QAAA,6EAAoH;QAAtC,wIAAS,cAAU,IAAC;QAAkB,wDAAiB;QAAA,4DAAS;QAC9I,6EAAsI;QAAvD,wIAAS,oBAAgB,IAAC;QAA6B,wDAAuB;QAAA,4DAAS;QACtK,6EAAoI;QAArD,wIAAS,mBAAe,IAAC;QAA4B,wDAAsB;QAAA,4DAAS;QACnK,6EAAoH;QAA5C,wIAAS,iBAAa,IAAC;QAAqB,wDAAe;QAAA,4DAAS;QAChJ,4DAAmB;QACvB,4DAAW;QACf,4DAAM;;QA1BM,0DACA;QADA,0FACA;QACK,0DAAkB;QAAlB,gFAAkB;QACL,0DAAiB;QAAjB,+EAAiB;QAGnC,0DAAW;QAAX,sFAAW;QAAM,0DAAuB;QAAvB,qFAAuB;QAA4B,0DACxE;QADwE,8FACxE;QAGuB,0DAA6B;QAA7B,kFAA6B;QAUN,0DAAmC;QAAnC,oGAAmC;QAAuC,0DAAiB;QAAjB,kFAAiB;QAC3F,0DAAoC;QAApC,qGAAoC;QAAwD,0DAAuB;QAAvB,wFAAuB;QACnH,0DAAoC;QAApC,qGAAoC;QAAsD,0DAAsB;QAAtB,uFAAsB;QACvH,0DAAoC;QAApC,qGAAoC;QAA6C,0DAAe;QAAf,gFAAe;;6FDblI,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACC;AACG;;;AAE3D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;CAG/C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;;;;;iBCJf,wHACJ;;;;;;iBAEI,0NACJ;;;;;;iBAEkD,iFAAM;;QAThE,yEACI;QAAA,8EACI;QAAA,iFACI;QADJ,0DACI;QACJ,4DAAiB;QACjB,mFACI;QADJ,0DACI;QACJ,4DAAmB;QACnB,sFACI;QAAA,4EAA8C;QAA9C,0DAA8C;QAAM,4DAAS;QACjE,4DAAmB;QAEvB,4DAAW;QACf,4DAAM;;6FDNO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface ErrorData {\n    message: string\n}\n\n@Component({\n    selector: 'error',\n    templateUrl: 'error.html',\n})\nexport class ErrorDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<ErrorDialog>,\n        @Inject(MAT_DIALOG_DATA) public data: ErrorData\n    ) { }\n    ok(): void {\n        this.dialogRef.close();\n    }\n\n}","<h1 mat-dialog-title>Oops...</h1>\n<div mat-dialog-content>\n    <span> {{data}}</span>\n</div>\n<div mat-dialog-actions style=\"justify-content: space-around;\" fxLayout=\"row\">\n    <button mat-raised-button color=\"accent\" (click)=\"ok()\">Ok</button>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-user';\n}\n","<mat-toolbar fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"toolbar\">\n    <img height=\"100%\" alt=\"Mist Logo\" src=\"angular-user/assets/logo.png\" />\n    <span class=\"title\">Mist PSK Self-Service</span>\n</mat-toolbar>\n\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { PortalComponent } from './portal/portal.component';\nimport { ErrorDialog } from './common/error';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PortalComponent,\n    ErrorDialog\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatButtonModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport {ErrorDialog} from './../common/error'\n\n@Component({\n  selector: 'app-portal',\n  templateUrl: './portal.component.html',\n  styleUrls: ['./portal.component.css']\n})\nexport class PortalComponent implements OnInit {\n\n  constructor(private _router: Router, private _http: HttpClient,public _dialog: MatDialog, private _snackBar: MatSnackBar) { }\n\n  text = {\n    hi: \"Hi\",\n    title: \"Requesting a WiFi key is a one-button process\",\n    subtitle: \"You need to know a few things first:\",\n    rows: [\n      {\n        text: \"Corporate laptops do not need a key. They are automatically configured to connect to the right network.\",\n        icon: \"business\"\n      },\n      {\n        text: \"Your key is yours. Do not share it with others. You're responsible for all activty that uses your key.\",\n        icon: \"fingerprint\"\n      },\n      {\n        text: \"If your use of our network causes problems for others you'll be disconnected.\",\n        icon: \"block\"\n      },\n      {\n        text: \"Each key permits up to three (3) concurrent device connections.\",\n        icon: \"recent_actors\"\n      },\n      {\n        text: \"If you already have a key and request another one your old key will stop working.\",\n        icon: \"vpn_key\"\n      },\n      {\n        text: \"Keyed networks do not have access to any internal resources. They behave as if you were using a network off-site.\",\n        icon: \"cloud_done\"\n      }\n    ],\n    getMyKey: \"Get a Key\",\n    deliverByEmail: \"Send By Email\",\n    displayQrCode: \"Configuration QRCode\",\n    revoke: \"Revoke My Key\",\n    keyCreatedSuccesfully: \"Key created Succesfully!\",\n    keydeletededSuccesfully: \"Key deleted Succesfully!\"\n  }\n\n  user = {\n    first_name:\"\",\n    last_name:\"\",\n    email: \"\"\n  }\n\n  key = \"\"\n  ssid = \"\"\n\n  isWorking = false\n  keyExists = false\n\n  ngOnInit(): void {\n  }\n\n  retrieveInfo(): void {\n    this.isWorking = true\n    this._http.get<any>('/api/user/myInfo/').subscribe({\n      next: data => {\n        this.keyExists = data.keyExists,\n        this.user = data.user,        \n        this.isWorking = false\n      },\n      error: error => {\n        this.isWorking = false\n        var message: string = \"Unable to contact the server... Please try again later... \"\n        if (\"error\" in error) { message += error[\"error\"][\"message\"] }\n        this.openError(message)\n      }\n    })\n  }\n\n  getMyKey(): void {\n    this.isWorking = true\n    this._http.post<any>('/api/user/myKey/', {}).subscribe({\n      next: data => {\n        this.key = data.key\n        this.ssid = data.ssid\n        this.isWorking = false\n        this.openSnackBar(this.text.keyCreatedSuccesfully, \"Ok\")\n      },\n      error: error => {\n        this.isWorking = false\n        var message: string = \"Unable to contact the server... Please try again later... \"\n        if (\"error\" in error) { message += error[\"error\"][\"message\"] }\n        this.openError(message)\n      }\n    })\n  }\n  revokeMyKey(): void {    this.isWorking = true\n    this._http.delete<any>('/api/user/myKey/', {}).subscribe({\n      next: data => {\n        this.key = \"\"\n        this.ssid = \"\"\n        this.isWorking = false\n        this.openSnackBar(this.text.keydeletededSuccesfully, \"Ok\")\n      },\n      error: error => {\n        this.isWorking = false\n        var message: string = \"Unable to contact the server... Please try again later... \"\n        if (\"error\" in error) { message += error[\"error\"][\"message\"] }\n        this.openError(message)\n      }\n    })\n  }\n  deliverByEmail(): void {\n    this.isWorking = true\n    this.isWorking = false\n  }\n  displayQrCode(): void {\n    \n  }\n  //////////////////////////////////////////////////////////////////////////////\n  /////           DIALOG BOXES\n  //////////////////////////////////////////////////////////////////////////////\n  // ERROR\n  openError(message: string): void {\n    const dialogRef = this._dialog.open(ErrorDialog, {\n      data: message\n    });\n  }\n\n  // SNACK BAR\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 5000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\",\n    });\n  }\n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n    <mat-card style=\"margin-top: 10%;\">\n        <mat-card-title>\n            {{text.title}}\n            <!-- <div *ngIf=\"!isWorking\" style=\"background-color: #{{color}}; height: 5px; width: 100%\"></div> -->\n            <div *ngIf=\"!isWorking\" color=\"accent\" style=\"height: 5px; width: 100%\"></div>\n            <mat-progress-bar *ngIf=\"isWorking\" color=\"accent\" mode=\"indeterminate\"></mat-progress-bar>\n        </mat-card-title>\n        <mat-card-subtitle>\n            {{text.hi}}<span *ngIf=\"user.first_name\"> {{user.first_name}}</span>! {{text.subtitle}}\n        </mat-card-subtitle>\n        <mat-card-content>\n            <mat-list>\n                <mat-list-item *ngFor=\"let row of text.rows\">\n                    <mat-icon class=\"row-icon\">{{row.icon}}</mat-icon>\n                    <div layout=\"column\">\n                        <span>{{row.text}}</span>\n                        <mat-divider></mat-divider>\n                    </div>\n                </mat-list-item>\n            </mat-list>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-raised-button color=\"primary\" [disabled]=\"isWorking || keyExists\" (click)=\"getMyKey()\" aria-label=\"get\">{{text.getMyKey}}</button>\n            <button mat-raised-button color=\"primary\" [disabled]=\"isWorking || !keyExists\" (click)=\"deliverByEmail()\" aria-label=\"deliverByEmail\">{{text.deliverByEmail}}</button>\n            <button mat-raised-button color=\"primary\" [disabled]=\"isWorking || !keyExists\" (click)=\"displayQrCode()\" aria-label=\"displayQrCode\">{{text.displayQrCode}}</button>\n            <button mat-button color=\"primary\" [disabled]=\"isWorking || !keyExists\" (click)=\"revokeMyKey()\" aria-label=\"revoke\">{{text.revoke}}</button>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component'\nimport { PortalComponent } from './portal/portal.component'\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'portal', component: PortalComponent },\n  //{ path: '', redirectTo: '/login', pathMatch: 'full' }, // redirect to `first-component`\n  //{ path: '**', redirectTo: '/login' }, // redirect to `first-component`\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"height: 100%;\" fxLayout=\"row\" fxLayoutAlign=\"center start\">\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"mat-elevation-z8 login-box\">\n        <mat-card-title i18n>\n            Welcome to the Mist PSK Self-Service Portal\n        </mat-card-title>\n        <mat-card-content i18n>\n            To get your personnal key to be able to connect to the network, please click on the button below to authenticate with your domain credentials.\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n            <button mat-raised-button color=\"accent\" i18n>Log In</button>\n        </mat-card-actions>\n\n    </mat-card>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}