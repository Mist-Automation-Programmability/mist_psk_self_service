{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/logout.service.ts","./src/app/portal/qrcode/qrcode.ts","./src/app/portal/qrcode/qrcode.html","./src/app/common/error.ts","./src/app/common/error.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/portal/portal.component.ts","./src/app/portal/portal.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/i18n.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class LogoutService {\n\n    // Observable string sources\n    private logoutSource = new Subject<string>();\n\n    // Observable string streams\n    logout_url$ = this.logoutSource.asObservable();\n\n    constructor() { }\n\n    // Service message commands\n    setUrl(logout_url: string) {\n        this.logoutSource.next(logout_url);\n    }\n\n    \n}","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface QrcodeData {\n    ssid: string;\n    passphrase: string\n}\n\n@Component({\n    selector: 'app-qrcode',\n    templateUrl: 'qrcode.html',\n})\nexport class QrCodeDialog {\n    public qrcode: string = null;\n\n    constructor(\n        public dialogRef: MatDialogRef<QrCodeDialog>,\n        @Inject(MAT_DIALOG_DATA) public data: QrcodeData) {\n        this.qrcode = \"WIFI:S:\" + data.ssid + \";T:WPA;P:\" + data.passphrase + \";;\";\n    }\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n}\n\n\n\n","<div mat-dialog-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <div><b>Tips: </b>You can scan this QRCode with your smartphone to automatically connect is to the network.</div>\n    <qrcode [qrdata]=\"qrcode\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n</div>\n<div mat-dialog-actions style=\"justify-content: space-around;\" fxLayout=\"row\">\n    <button mat-raised-button color=\"accent\" (click)=\"onNoClick()\">Close</button>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface ErrorData {\n    message: string\n}\n\n@Component({\n    selector: 'error',\n    templateUrl: 'error.html',\n})\nexport class ErrorDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<ErrorDialog>,\n        @Inject(MAT_DIALOG_DATA) public data: ErrorData\n    ) { }\n    ok(): void {\n        this.dialogRef.close();\n    }\n\n}","<h1 mat-dialog-title>Oops...</h1>\n<div mat-dialog-content>\n    <span> {{data}}</span>\n</div>\n<div mat-dialog-actions style=\"justify-content: space-around;\" fxLayout=\"row\">\n    <button mat-raised-button color=\"accent\" (click)=\"ok()\">Ok</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { LanguageService } from \"./services/i18n.service\";\nimport { LogoutService } from \"./services/logout.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  constructor(private _http: HttpClient, private _language_service: LanguageService, private _logout_service: LogoutService) { }\n\n  current_language: string = \"en\";\n  logout_url: string;\n  languages = []\n\n  ngOnInit(): void {\n    this._language_service.setLanguage(\"en\")\n    this._logout_service.logout_url$.subscribe(url => this.logout_url = url)\n    this.getLanguages()\n  }\n\n  changeLanguage(e) {\n    if (e.source._selected) {\n      console.log(e)\n      this.current_language = e.source.value\n      this._language_service.setLanguage(this.current_language)\n    }\n  }\n\n  parse_data(data) {\n    this.current_language = data.default;\n    this._language_service.setLanguage(this.current_language)\n    this.languages = data.languages;\n  }\n  parse_error(data): void {\n    console.log(data)\n  }\n\n  getLanguages(): void {\n    this._http.get(\"/api/user/languages\").subscribe({\n      next: data => this.parse_data(data),\n      error: error => this.parse_error(error)\n    })\n  }\n\n}\n","<mat-toolbar fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"toolbar\">\n    <img height=\"100%\" alt=\"Mist Logo\" src=\"/images/juniper.png\" />\n    <span style=\"flex: auto\"></span>\n    <a mat-button href=\"{{logout_url}}\" aria-label=\"logout\" *ngIf=\"logout_url != ''\">\n        <mat-icon class=\"row-icon\">logout</mat-icon>\n    </a>\n    <mat-form-field>\n        <mat-select [(value)]=\"current_language\" style=\"font-size: smaller;\">\n            <mat-option *ngFor=\"let language of languages\" [value]=\"language.short\" (onSelectionChange)=\"changeLanguage($event)\">\n                {{language.long}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n</mat-toolbar>\n\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { PortalComponent} from './portal/portal.component';\nimport { QrCodeDialog } from './portal/qrcode/qrcode';\nimport { ErrorDialog } from './common/error';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { QRCodeModule } from 'angularx-qrcode';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PortalComponent,\n    QrCodeDialog,\n    ErrorDialog\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatButtonModule,\n    MatListModule,\n    MatIconModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    QRCodeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { QrCodeDialog } from './qrcode/qrcode';\nimport { ErrorDialog } from '../common/error';\n\nimport { LanguageService } from \"../services/i18n.service\"\nimport { LogoutService } from \"../services/logout.service\"\n\n@Component({\n  selector: 'app-portal',\n  templateUrl: './portal.component.html',\n  styleUrls: ['./portal.component.css']\n})\nexport class PortalComponent implements OnInit {\n\n  constructor(private _router: Router, private _http: HttpClient, public _dialog: MatDialog, private _snackBar: MatSnackBar, private _activated_route: ActivatedRoute, private _language_service: LanguageService, private _logout_service: LogoutService) { }\n\n  i18n = {\n    hi: \"\",\n    title: \"\",\n    subtitle: \"\",\n    rows: [],\n    getMyKey: \"\",\n    deliverByEmail: \"\",\n    displayQrCode: \"\",\n    revoke: \"\",\n    keyCreatedSuccesfully: \"\",\n    keyDeletededSuccesfully: \"\",\n    keySentSuccesfully: \"\"\n  }\n\n  user = {\n    name: \"\",\n    email: \"\"\n  }\n\n  key = \"\";\n  ssid = \"\";\n\n\n  is_working = false;\n  key_exists = false;\n  org_id: string;\n\n\n  //////////////////////////////////////////////////////////////////////////////\n  /////           INIT\n  //////////////////////////////////////////////////////////////////////////////\n\n  ngOnInit(): void {\n    this._language_service.current_language$.subscribe(current_language => {\n       this.getText(current_language);\n    });\n    this._activated_route.params.forEach(p => this.org_id = p[\"org_id\"])\n    this.retrieveInfo();\n    this.getMyKey();\n  }\n\n\n  //////////////////////////////////////////////////////////////////////////////\n  /////           FUNCTIONS\n  //////////////////////////////////////////////////////////////////////////////\n\n  parse_error(data): void {\n    this.is_working = false\n    console.log(data)\n    if (data.status == 401) {\n      window.location.href=\"/login/\" + this.org_id\n    } else {\n      var message: string = \"Unable to contact the server... Please try again later... \"\n      if (data.error && data.error.message) message = data.error.message\n      else if (data.error) message = data.error\n      this.openError(message)\n    }\n  }\n\n\n  retrieveInfo(): void {\n    this.is_working = true\n    this._http.get<any>('/api/user/myInfo/' + this.org_id).subscribe({\n      next: data => {\n        this.user = data.user,\n        this._logout_service.setUrl(data.logout_url)\n          this.is_working = false\n      },\n      error: error => this.parse_error(error)\n    })\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  /////           TEXT MGMT\n  //////////////////////////////////////////////////////////////////////////////\n  parseText(data): void {\n    this.i18n = data.i18n;\n  }\n\n  getText(language: string): void {\n    this._http.get(\"/api/user/text/\" + this.org_id + \"?page=portal&lang=\" + language).subscribe({\n      next: data => this.parseText(data),\n      error: error => this.parse_error(error)\n    })\n  }\n  //////////////////////////////////////////////////////////////////////////////\n  /////           KEY MGMT\n  //////////////////////////////////////////////////////////////////////////////\n\n  getMyKey(): void {\n    this.is_working = true\n    this._http.get<any>('/api/user/psk/' + this.org_id).subscribe({\n      next: data => {\n        if (data && data.passphrase && data.ssid) {\n          this.key = data.passphrase;\n          this.ssid = data.ssid;\n          this.key_exists = true;\n          this.is_working = false;\n        }\n      },\n      error: error => this.parse_error(error)\n    })\n  }\n  createMyKey(): void {\n    this.is_working = true\n    this._http.post<any>('/api/user/psk/', {}).subscribe({\n      next: data => {\n        this.key = data.passphrase;\n        this.ssid = data.ssid;\n        this.key_exists = true;\n        this.is_working = false;\n        this.openSnackBar(this.i18n.keyCreatedSuccesfully, \"Ok\");\n      },\n      error: error => this.parse_error(error)\n    })\n  }\n  revokeMyKey(): void {\n    this.is_working = true\n    this._http.delete<any>('/api/user/psk/', {}).subscribe({\n      next: data => {\n        this.key = \"\";\n        this.ssid = \"\";\n        this.is_working = false;\n        this.key_exists = false;\n        this.openSnackBar(this.i18n.keyDeletededSuccesfully, \"Ok\")\n      },\n      error: error => this.parse_error(error)\n    })\n  }\n  deliverByEmail(): void {\n    this.is_working = true\n    this._http.post<any>('/api/user/email', { ssid: this.ssid, psk: this.key }).subscribe({\n      next: data => {\n        this.is_working = false;\n        this.openSnackBar(this.i18n.keySentSuccesfully.replace(\"{email}\", this.user.email), \"Ok\")\n      },\n      error: error => this.parse_error(error)\n    })\n  }\n  //////////////////////////////////////////////////////////////////////////////\n  /////           DIALOG BOXES\n  //////////////////////////////////////////////////////////////////////////////\n  // ERROR\n  openError(message: string): void {\n    const dialogRef = this._dialog.open(ErrorDialog, {\n      data: message\n    });\n  }\n\n  // QRCODE DIALOG\n  openQrcode(): void {\n    const dialogRef = this._dialog.open(QrCodeDialog, {\n      data: { ssid: this.ssid, passphrase: this.key }\n    });\n  }\n\n\n  // SNACK BAR\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 5000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\",\n    });\n  }\n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n    <mat-card style=\"margin-top: 10%;\">\n        <mat-card-title>\n            {{i18n.title}}\n            <!-- <div *ngIf=\"!is_working\" style=\"background-color: #{{color}}; height: 5px; width: 100%\"></div> -->\n            <div *ngIf=\"!is_working\" color=\"accent\" style=\"height: 5px; width: 100%\"></div>\n            <mat-progress-bar *ngIf=\"is_working\" color=\"accent\" mode=\"indeterminate\"></mat-progress-bar>\n        </mat-card-title>\n        <mat-card-subtitle>\n            {{i18n.hi}}<span *ngIf=\"user.name\"> {{user.name}}</span>! {{i18n.subtitle}}\n        </mat-card-subtitle>\n        <mat-card-content>\n            <div fxLayout=\"column\">\n                <div *ngFor=\"let row of i18n.rows\" fxLAyout=\"column\">\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin: 5px 0;\">\n                        <mat-icon class=\"row-icon\">{{row.icon}}</mat-icon>\n                        <div>{{row.text}}</div>\n                    </div>\n                    <mat-divider></mat-divider>\n                </div>\n            </div>\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"5px\">\n            <div></div>\n            <button mat-raised-button color=\"accent\" [disabled]=\"is_working\" (click)=\"createMyKey()\" aria-label=\"get\">{{i18n.getMyKey}}</button>\n            <button mat-raised-button color=\"primary\" *ngIf=\"user.email\" [disabled]=\"is_working || !key_exists\" (click)=\"deliverByEmail()\" aria-label=\"deliverByEmail\">{{i18n.deliverByEmail}}</button>\n            <button mat-raised-button color=\"primary\" [disabled]=\"is_working || !key_exists\" (click)=\"openQrcode()\" aria-label=\"displayQrCode\">{{i18n.displayQrCode}}</button>\n            <button mat-button color=\"primary\" [disabled]=\"is_working || !key_exists\" (click)=\"revokeMyKey()\" aria-label=\"revoke\">{{i18n.revoke}}</button>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component'\nimport { PortalComponent } from './portal/portal.component'\n\nconst routes: Routes = [\n  { path: 'login/:org_id', component: LoginComponent },\n  { path: 'portal/:org_id', component: PortalComponent },\n  { path: '', redirectTo: '/login', pathMatch: 'full' }, // redirect to `first-component`\n  { path: '**', redirectTo: '/login' }, // redirect to `first-component`\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'corrected' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\nimport {LanguageService} from '../services/i18n.service';\nimport {LogoutService} from '../services/logout.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @Input()  current_lanaguage:string;\n  \n  constructor(private _http: HttpClient, private _activated_route: ActivatedRoute, private _language_service: LanguageService, private _logout_service : LogoutService ) { }\n\n  auth_url: string;\n  i18n = {\n    title: \"\",\n    content: \"\",\n    login: \"\"\n  }\n\n  error;\n  org_id: string;\n\n  ngOnInit(): void {\n    this._logout_service.setUrl(\"\");\n    this._language_service.current_language$.subscribe(current_language => {\n      this.getText(current_language);\n    });\n    this._activated_route.params.forEach( p => this.org_id  =p[\"org_id\"])\n    this.getAuthUrl();\n  }\n\n\n  parseAuthUrl(data): void {\n    this.auth_url = data.url;\n\n  }\n\n  getAuthUrl(): void {\n    this._http.get(\"/api/user/auth_url/\"+this.org_id).subscribe({\n      next: data => {\n        this.parseAuthUrl(data)},\n      error: error => this.error = error\n    })\n  }\n\n  parseText(data): void {\n    this.i18n = data.i18n;\n  }\n\n  getText(current_language:string): void {\n    var query = \"?page=login\"\n    if (current_language != 'init') query += \"&lang=\"+current_language\n    this._http.get(\"/api/user/text/\"+this.org_id+query).subscribe({\n      next: data => this.parseText(data),\n      error: error => this.error = error\n    })\n  }\n\n}\n","<div style=\"height: 100%;\" fxLayout=\"row\" fxLayoutAlign=\"center start\">\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"mat-elevation-z8 login-box\">\n        <mat-card-title>\n            {{i18n.title}}\n        </mat-card-title>\n        <mat-card-content>\n            {{i18n.content}}\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n            <a mat-raised-button color=\"accent\" href=\"{{auth_url}}\">{{i18n.login}}</a>\n        </mat-card-actions>\n\n    </mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class LanguageService {\n\n    // Observable string sources\n    private languageSource = new Subject<string>();\n\n    // Observable string streams\n    current_language$ = this.languageSource.asObservable();\n\n    constructor() { }\n\n    // Service message commands\n    setLanguage(language: string) {\n        this.languageSource.next(language);\n    }\n\n    \n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}