{"version":3,"sources":["./src/app/login/login-2FA.ts","./src/app/login/login-2fa.html","./src/environments/environment.ts","./src/app/configuration/configuration.token.manual.ts","./src/app/configuration/configuration.token.manual.html","./src/app/configuration/authentication/google/google.component.ts","./src/app/configuration/authentication/google/google.component.html","./src/app/org-select/org-select.component.ts","./src/app/org-select/org-select.component.html","./src/app/common/error.ts","./src/app/common/error.html","./src/app/configuration/configuration.component.ts","./src/app/configuration/configuration.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/configuration/authentication/okta/okta.component.ts","./src/app/configuration/authentication/okta/okta.component.html","./src/app/app.module.ts","./src/app/configuration/authentication/azure/azure.component.ts","./src/app/configuration/authentication/azure/azure.component.html","./src/app/configuration/configuration.confirm.ts","./src/app/configuration/configuration.confirm.html","./src/app/configuration/authentication/adfs/adfs.component.ts","./src/app/configuration/authentication/adfs/adfs.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'login-2fa',\n    templateUrl: 'login-2fa.html',\n})\nexport class TwoFactorDialog {\n    public twoFactor: string;\n    constructor(public dialogRef: MatDialogRef<TwoFactorDialog>) { }\n\n    close2FA() {\n        this.dialogRef.close(this.twoFactor);\n    }\n    cancel2FA(): void {\n        this.dialogRef.close();\n    }\n}","<style>\n    /* Chrome, Safari, Edge, Opera */\n    \n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n    /* Firefox */\n    \n    input[type=number] {\n        -moz-appearance: textfield;\n    }\n</style>\n<h1 mat-dialog-title>2FA Code Required</h1>\n<mat-dialog-content>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Code</mat-label>\n        <input matInput type=\"number\" [(ngModel)]=\"twoFactor\" (keydown.enter)=\"close2FA()\" name=\"two_factor_code\" />\n    </mat-form-field>\n</mat-dialog-content>\n<div mat-dialog-actions fxLayoutAlign=\"center space-around\">\n    <button mat-button (click)=\"cancel2FA()\">Cancel</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"twoFactor\" cdkFocusInitial type=\"submit\">Verify</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'token.manual',\n    templateUrl: 'configuration.token.manual.html',\n})\nexport class ApitokenManualDialog {\n    public apitoken: string;\n    constructor(public dialogRef: MatDialogRef<ApitokenManualDialog>) { }\n\n    closeToken() {\n        this.dialogRef.close(this.apitoken);\n    }\n    cancelManualToken(): void {\n        this.dialogRef.close();\n    }\n}","<h1 mat-dialog-title>\n    Manual API Token</h1>\n<mat-dialog-content>\n    <mat-form-field appearance=\"outline\" style=\"width: 40em;\">\n        <mat-label>API TOKEN</mat-label>\n        <input matInput type=\"string\" [(ngModel)]=\"apitoken\" (keydown.enter)=\"closeToken()\" name=\"apitoken\" cdkFocusInitial/>\n    </mat-form-field>\n</mat-dialog-content>\n<div mat-dialog-actions fxLayoutAlign=\"center space-around\">\n    <button mat-button (click)=\"cancelManualToken()\">Cancel</button>\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"apitoken\" type=\"submit\">Save</button>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\nimport { MatChipInputEvent } from '@angular/material/chips';\n\n\n\n@Component({\n  selector: 'app-configuration-google',\n  templateUrl: './google.component.html',\n  styleUrls: ['./../../configuration.component.css']\n})\nexport class GoogleComponent implements OnInit {\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  \n  @Input() auth: {\n    domains: []\n  }\n  @Input() host: string\n\n  constructor() { }\n\n  google = {\n    domains: []\n  }\n  error_message = \"\"\n  ngOnInit(): void {\n    if (this.auth.domains) this.google.domains = this.auth.domains;\n    else this.google.domains = []\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    if ((value || '').trim()) {\n      if (this.google.domains.indexOf(value.trim()) < 0) {\n        if (value.indexOf(\".\") > -1 && value.indexOf(\".\") < value.length - 1 && value.indexOf(\"@\") < 0) {\n          this.google.domains.push(value.trim());\n          this.error_message = \"\"\n        } else this.error_message = value.trim() + \" is not a valid domain name\"\n      }\n    }\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  remove(domain: String): void {\n    const index = this.google.domains.indexOf(domain);\n\n    if (index >= 0) {\n      this.google.domains.splice(index, 1);\n    }\n  }\n\n}\n","<form>\n\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>Allowed Domains (Optional)</mat-label>\n        <mat-chip-list #chipList aria-label=\"Allowed selection\">\n            <mat-chip *ngFor=\"let domain of google.domains\" [selectable]=\"true\" [removable]=\"true\" (removed)=\"remove(domain)\">\n                {{domain}}\n                <mat-icon matChipRemove>cancel</mat-icon>\n            </mat-chip>\n            <input placeholder=\"New domain...\" [matChipInputFor]=\"chipList\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"true\" (matChipInputTokenEnd)=\"add($event)\">\n        </mat-chip-list>\n        <mat-hint style=\"color:red\">\n            {{error_message}}\n        </mat-hint>\n\n    </mat-form-field>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\n\nexport interface Org {\n  id: string;\n  name: string;\n  //role: string;\n}\n\n@Component({\n  selector: 'app-org-select',\n  templateUrl: './org-select.component.html',\n  styleUrls: ['./org-select.component.css']\n})\nexport class OrgSelectComponent implements OnInit {\n\n  constructor(private _formBuilder: FormBuilder, private _http: HttpClient, private _router: Router) { }\n\n  org_id: string = \"\";\n  orgs: Org[] = [];\n  loading: boolean = false;\n  error_mess: string = \"\";\n\n  ngOnInit(): void {\n    this.loadOrgs()\n  }\n\n\n\n  //// LOAD ORGS ////\n  loadOrgs(): void {\n    this.orgs = []\n    this.loading = true;\n    this._http.get<any>('/api/admin/orgs').subscribe({\n      next: data => {\n        this.orgs = data;\n        this.loading = false;\n      },\n      error: error => this.error_message(error.error)\n    })\n  }\n\n  submitOrg(): void {\n    this._http.post<any>('/api/admin/orgs', {org_id: this.org_id}).subscribe({\n      next: data => {\n        this._router.navigate(['/admin/config']);\n      },\n      error: error => this.error_message(error.error)\n    })\n  }\n\n  // WHEN AUTHENTICATION IS NOT OK\n  error_message(message): void {\n    this.loading = false;\n    this.error_mess = message;\n  }\n\n}\n\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"height: 20em; max-height: 100%;\">\n    <mat-card class=\"card-outer\" fxLayout=\"column\" style=\"max-width: 90%;\">\n        <mat-form-field apparence=\"outline\" style=\"width: 30em; max-width: 100%\">\n            <mat-label>Organization</mat-label>\n            <mat-select [(value)]=\"org_id\">\n                <mat-option *ngFor=\"let org of orgs\" [value]=org.org_id>\n                    {{org.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <button mat-raised-button color=\"primary\" (click)=\"submitOrg()\">\n                Select\n            </button>\n    </mat-card>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface ErrorData {\n    message: string\n}\n\n@Component({\n    selector: 'error',\n    templateUrl: 'error.html',\n})\nexport class ErrorDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<ErrorDialog>,\n        @Inject(MAT_DIALOG_DATA) public data: ErrorData\n    ) { }\n    ok(): void {\n        this.dialogRef.close();\n    }\n\n}","<h1 mat-dialog-title>Oops...</h1>\n<div mat-dialog-content>\n    <span> {{data}}</span>\n</div>\n<div mat-dialog-actions style=\"justify-content: space-around;\" fxLayout=\"row\">\n    <button mat-raised-button color=\"accent\" (click)=\"ok()\">Ok</button>\n</div>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApitokenManualDialog } from './configuration.token.manual';\nimport { ConfirmDialog } from './configuration.confirm';\n\nimport { ErrorDialog } from './../common/error'\nimport { AdfsComponent } from './authentication/adfs/adfs.component';\nimport { AzureComponent } from './authentication/azure/azure.component';\nimport { GoogleComponent } from './authentication/google/google.component';\nimport { OktaComponent } from './authentication/okta/okta.component';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.css']\n})\nexport class ConfigurationComponent {\n\n  @ViewChild(AdfsComponent) adfsComp;\n  @ViewChild(AzureComponent) azureComp;\n  @ViewChild(GoogleComponent) googleComp;\n  @ViewChild(OktaComponent) oktaComp;\n\n  constructor(private _router: Router, private _http: HttpClient, public _dialog: MatDialog, private _snackBar: MatSnackBar) { }\n\n\n  //COMMON\n  privilege: string = \"\";\n  account_created: boolean = false;\n  //TOKEN\n  token = {\n    configured: false,\n    created_by: \"\",\n    scope: \"\",\n    can_delete: false,\n    auto_mode: true\n  }\n  //PSK\n  psk = {\n    configured: false,\n    config: {\n    scope: \"site\",\n    site_id: \"\",\n    ssid: \"\",\n    vlan_id: 0, \n    min: true,\n    cap: false,\n    num: true,\n    spec: false,\n    length: 12\n  }\n}\n  sites;\n  wlans;\n  enable_vlan: boolean = false;\n  // AUTH\n  auth = {\n    configured: false,\n    host: \"\",\n    org_id: \"\",\n    method: null,\n    config: {}\n  }\n  auth_methods = [\n    { id: \"adfs\", name: \"ADFS\" },\n    { id: \"azure\", name: \"Azure\" },\n    { id: \"google\", name: \"Google\" },\n    { id: \"okta\", name: \"Okta\" },\n  ];\n\n  is_working = false;\n  portal_url = \"https://\";\n\n  ngOnInit(): void {\n    this.is_working = true;\n    this._http.get<any>('/api/admin/config/').subscribe({\n      next: data => {\n        this.is_working = false;\n        this.parse_response(data);\n      },\n      error: error => {\n        this.parse_error(error);\n      }\n    })\n  }\n\n\n  parse_response(data): void {\n    if (data.account_created) this.account_created = data.account_created;\n    if (data.privilege) this.privilege = data.privilege;\n\n    if (data.token) this.token = data.token;\n\n    if (data.psk) {\n      this.psk = data.psk;\n      if (data.psk.vlan_id > 0) {\n        this.enable_vlan = true\n      }\n    }\n\n    if (data.auth) {\n      this.auth = data.auth\n    }\n\n    if (data.wlans) {\n      this.wlans = data.wlans\n    }\n    if (this.psk.config.scope == \"site\") {\n      this.changeScope();\n    }\n    if (this.psk.config.site_id || this.psk.config.scope == \"org\") {\n      this.getWlans();\n    }\n    if (data.portal_url) {\n      this.portal_url = data.portal_url\n    }\n  }\n\n  parse_error(data): void {\n    this.is_working = false\n    if (data.status == \"401\") {\n      this._router.navigate([\"/\"])\n    } else {\n      var message: string = \"Unable to contact the server... Please try again later... \"\n      if (data.error && data.error.message) message = data.error.message\n      else if (data.error) message = data.error\n      this.openSnackBar(message, \"OK\")\n    }\n  }\n\n\n  //////////////////////////////////////////////////////////////////////////////\n  /////           TOKEN\n  //////////////////////////////////////////////////////////////////////////////\n  getPortalUrl(): void {\n    this._http.get(\"/api/admin/portal_url\").subscribe({\n      next: data => this.parse_response(data),\n      error: error => this.parse_error(error)\n    })\n  }\n  generateToken(scope: string): void {\n    this.token.configured = false;\n    this.token.auto_mode = true;\n    this.is_working = true;\n    this._http.post<any>('/api/admin/token', { scope: scope }).subscribe({\n      next: data => {\n        this.token.configured = true;\n        this.token.auto_mode = true;\n        this.is_working = false\n        this.openSnackBar(\"New API Token created.\", \"Ok\")\n        this.getPortalUrl();\n      },\n      error: error => {\n        this.parse_error(error)\n      }\n    })\n  }\n\n  saveManualToken(apitoken: string): void {\n    this.token.configured = false;\n    this.token.auto_mode = true;\n    this.is_working = true;\n    this._http.post<any>('/api/admin/token', { apitoken: apitoken }).subscribe({\n      next: data => {\n        this.token.configured = true;\n        this.token.auto_mode = false;\n        this.is_working = false\n        this.openSnackBar(\"New API Token created.\", \"Ok\")\n      },\n      error: error => {\n        this.parse_error(error)\n      }\n    })\n  }\n\n  deleteToken(): void {\n    this.is_working = true;\n    const dialogRef = this._dialog.open(ConfirmDialog, { data: { title: \"Delete Token\", message: \"This action will delete the API Token from the Mist Cloud.\" } });\n    dialogRef.afterClosed().subscribe(result => {\n      this.is_working = true\n      if (result) {\n        this._http.delete(\"/api/admin/token\").subscribe({\n          next: data => {\n            this.is_working = false\n            this.token.configured = false;\n            this.token.auto_mode = true;\n          },\n          error: error => this.parse_error(error)\n        })\n      }\n    })\n  }\n\n\n  //////////////////////////////////////////////////////////////////////////////\n  /////           PSK\n  //////////////////////////////////////////////////////////////////////////////\n\n  changeScope(): void {\n    this.is_working = true;\n    this.sites = []\n    this.wlans = []\n    if (this.psk.config.scope === \"site\") {\n      this._http.get(\"/api/admin/psk/sites\").subscribe({\n        next: data => {\n          this.is_working = false;\n          this.sites = data;\n        },\n        error: error => this.parse_error(error)\n      })\n    } else {\n      this.is_working = false;\n      this.sites = null;\n      this.psk.config.site_id = null;\n      this.getWlans();\n    }\n  }\n\n  getWlans(): void {\n    this.is_working = true;\n    this.wlans = null\n    if (this.psk.config.site_id) {\n      var query = \"?site_id=\" + this.psk.config.site_id\n    } else {\n      var query = \"\"\n    }\n    this._http.get('/api/admin/psk/wlans' + query).subscribe({\n      next: data => {\n        this.is_working = false;\n        this.wlans = data;\n      },\n      error: error => this.parse_error(error)\n    })\n  }\n\n  savePskConfig(): void {\n    this.is_working = true;\n    if (!this.enable_vlan) {\n      this.psk.config.vlan_id= 0\n    }\n    var data = this.psk.config\n    this._http.post(\"/api/admin/psk\", data).subscribe({\n      next: data => {\n        this.is_working = false;\n        this.psk.configured = true;\n      },\n      error: error => this.parse_error(error)\n\n    })\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  /////           AUTH\n  //////////////////////////////////////////////////////////////////////////////\n\n  saveAuth() {\n    var data = {}\n    if (this.auth.method == \"adfs\") {data = {config:this.adfsComp.adfs}} \n    else if (this.auth.method == \"google\") {data = {config:this.googleComp.google}} \n    else if (this.auth.method == \"azure\") {data = {config:this.azureComp.azure}} \n    else if (this.auth.method == \"okta\") {data = {config:this.oktaComp.okta}} \n    this._http.post(\"/api/admin/auth/\" + this.auth.method, data).subscribe({\n      next: data => {\n        this.is_working = false;\n        this.auth.configured = true;\n      },\n      error: error => this.parse_error(error)\n    })\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  /////           DIALOG BOXES\n  //////////////////////////////////////////////////////////////////////////////\n  // ERROR\n  openError(message: string): void {\n    const dialogRef = this._dialog.open(ErrorDialog, {\n      data: message\n    });\n  }\n\n  // SNACK BAR\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 5000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\",\n    });\n  }\n\n  //// DIALOG BOX ////\n  openApitokenManual(): void {\n    const dialogRef = this._dialog.open(ApitokenManualDialog, {});\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) { this.saveManualToken(result) }\n    });\n  }\n}","<div fxLayout=\"row wrap\" fxLayoutAlign=\"flex-start\">\n    <div>\n        <mat-card>\n            <mat-card-title>Status</mat-card-title>\n            <mat-card-content>\n                <table>\n                    <tr>\n                        <th>API Token:</th>\n                        <td>\n                            <div *ngIf=\"token.configured\" fxLayout=\"row\">\n                                <div class=\"material-icons green\">done</div>\n                                <div class=\"text\" *ngIf=\"token.auto_mode\">\n                                    {{token.scope | uppercase }} Token generated by {{token.created_by}}\n                                </div>\n                                <div class=\"text\" *ngIf=\"!token.auto_mode\">\n                                    Token manually configured by {{token.created_by}}\n                                </div>\n                            </div>\n                            <div *ngIf=\"!token.configured\" fxLayout=\"row\">\n                                <div class=\"material-icons red\">close</div>\n                                <div class=\"text\">Not Configured</div>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>WLAN:</th>\n                        <td>\n                            <div *ngIf=\"psk.configured\" fxLayout=\"row\">\n                                <div class=\"material-icons green\">done</div>\n                                <div class=\"text\">Configured</div>\n                            </div>\n                            <div *ngIf=\"!psk.configured\" fxLayout=\"row\">\n                                <div class=\"material-icons red\">close</div>\n                                <div class=\"text\">Not Configured</div>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Authentication</th>\n                        <td>\n                            <div *ngIf=\"auth.configured\" fxLayout=\"row\">\n                                <div class=\"material-icons green\">done</div>\n                                <div class=\"text\">Configured</div>\n                            </div>\n                            <div *ngIf=\"!auth.configured\" fxLayout=\"row\">\n                                <div class=\"material-icons red\">close</div>\n                                <div class=\"text\">Not Configured</div>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Portal URL</th>\n                        <td>{{portal_url}}</td>\n                    </tr>\n                </table>\n            </mat-card-content>\n            <mat-card-action fxLayoutAlign=\"end\">\n                <button mat-button color=\"accent\" [disabled]=\"!account_created\">Delete Org Configuration</button>\n            </mat-card-action>\n        </mat-card>\n\n        <mat-card>\n            <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"start center\">API Token\n                <div *ngIf=\"token.configured\" class=\"material-icons green\">done</div>\n                <div *ngIf=\"!token.configured\" class=\"material-icons red\">close</div>\n            </mat-card-title>\n            <mat-card-subtitle>This application needs a Mist API Token with write access to create/delete Mist PSKs.\n            </mat-card-subtitle>\n            <mat-card-content>\n            </mat-card-content>\n            <mat-card-actions fxLayoutAlign=\"end\">\n                <button mat-button color=\"accent\" [disabled]=\"!token.configured || !token.auto_mode || !token.can_delete\" (click)=\"deleteToken()\">Delete Token</button>\n                <button mat-raised-button color=\"primary\" (click)=\"generateToken('user')\">Generate User Token</button>\n                <button mat-raised-button color=\"primary\" (click)=\"generateToken('org')\" *ngIf=\"privilege == 'admin'\">Generate Org Token</button>\n                <button mat-raised-button color=\"primary\" (click)=\"openApitokenManual()\">Use Manual Token</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n    <div>\n        <mat-card>\n            <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"start center\">PSK\n                <div *ngIf=\"psk.configured\" class=\"material-icons green\">done</div>\n                <div *ngIf=\"!psk.configured\" class=\"material-icons red\">close</div>\n            </mat-card-title>\n            <mat-card-subtitle>Define if you want to generate PSKs at org or site level, the PSK SSID and the PSK VLAN.\n            </mat-card-subtitle>\n            <mat-card-content fxLayout=\"column\">\n                <mat-toolbar class=\"mat-hue-2\" style=\"height: 40px;min-height: 40px;\">\n                    <div class=\"mat-toolbar-tools\">\n                        <span>PSK Configuration</span>\n                    </div>\n                </mat-toolbar>\n                <mat-form-field appearance=\"outline\" *ngIf=\"privilege=='admin'\">\n                    <mat-label>Level</mat-label>\n                    <mat-select [(value)]=\"psk.config.scope\" [disabled]=\"!token.configured\" (selectionChange)=\"changeScope()\">\n                        <mat-option value=\"site\">Site</mat-option>\n                        <mat-option value=\"org\">Org</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"psk.config.scope=='site'\">\n                    <mat-label>Site</mat-label>\n                    <mat-select [(value)]=\"psk.config.site_id\" [disabled]=\"!token.configured\" (selectionChange)=\"getWlans()\">\n                        <mat-option *ngFor=\"let site of sites\" [value]=\"site.id\">\n                            {{site.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>WLAN</mat-label>\n                    <mat-select [(value)]=\"psk.config.ssid\" [disabled]=\"!token.configured\">\n                        <mat-option *ngFor=\"let wlan_name of wlans\" [value]=\"wlan_name\">\n                            {{wlan_name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <div style=\"margin-bottom: 0.5em\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <span style=\"margin-right: 1em ;\">Enable VLAN: </span>\n\n                    <mat-slide-toggle [(ngModel)]=\"enable_vlan\">{{enable_vlan}}</mat-slide-toggle>\n                </div>\n                <mat-form-field appearance=\"outline\" *ngIf=\"enable_vlan\">\n                    <mat-label>VLAN ID</mat-label>\n                    <input matInput [(ngModel)]=\"psk.config.vlan_id\" type=\"number\" [disabled]=\"!token.configured\">\n                </mat-form-field>\n\n                <mat-toolbar class=\"mat-hue-2\" style=\"height: 40px;min-height: 40px;\">\n                    <div class=\"mat-toolbar-tools\">\n                        <span>PSK Generation</span>\n                    </div>\n                </mat-toolbar>\n\n                <div fxLayout=\"row\" style=\"margin-top: 1em;\">\n                    <div>PSK Characters: </div>\n                    <div style=\"margin: 0 2em\">\n                        <mat-checkbox [(ngModel)]=\"psk.config.min\">a-z</mat-checkbox>\n                    </div>\n                    <div style=\"margin: 0 2em\">\n                        <mat-checkbox [(ngModel)]=\"psk.config.cap\">A-Z</mat-checkbox>\n                    </div>\n                    <div style=\"margin: 0 2em\">\n                        <mat-checkbox [(ngModel)]=\"psk.config.num\">0-9</mat-checkbox>\n                    </div>\n                    <div style=\"margin: 0 2em\">\n                        <mat-checkbox [(ngModel)]=\"psk.config.spec\">!@#$%^&*</mat-checkbox>\n                    </div>\n                </div>\n                <div style=\"margin-bottom: 0.5em\">\n                    <mat-label>PSK Length: {{psk.config.length}}</mat-label>\n                    <mat-slider [(ngModel)]=\"psk.config.length\" min=\"8\" mac=\"63\" step=\"1\" thumbLabel tickInterval=\"1\" style=\"width: 30em;\"></mat-slider>\n                </div>\n            </mat-card-content>\n            <mat-card-actions fxLayoutAlign=\"end\">\n                <button mat-raised-button color=\"primary\" [disabled]=\"!token.configured\" (click)=\"savePskConfig()\">Save</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n\n\n    <div>\n        <mat-card>\n            <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"start center\">Authentication\n                <div *ngIf=\"auth.configured\" class=\"material-icons green\">done</div>\n                <div *ngIf=\"!auth.configured\" class=\"material-icons red\">close</div>\n            </mat-card-title>\n            <mat-card-subtitle>Define the authentication method for the PSK Portal.</mat-card-subtitle>\n            <mat-card-content>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Authentication Method</mat-label>\n                    <mat-select [(value)]=\"auth.method\">\n                        <mat-option *ngFor=\"let method of auth_methods\" [value]=\"method.id\">\n                            {{method.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <a mat-button [disabled]='auth.method ==\"\"' color=\"primary\" href=\"/admin/help/{{auth.method}}\" target=_blank mat-raised-primary>Configuration Help</a>\n                <app-configuration-adfs *ngIf=\"auth.method=='adfs'\" [auth]=\"auth.config\"></app-configuration-adfs>\n                <app-configuration-azure *ngIf=\"auth.method=='azure'\" [auth]=\"auth.config\" [host]=\"auth.host\" [org_id]=\"auth.org_id\"></app-configuration-azure>\n                <app-configuration-google *ngIf=\"auth.method=='google'\" [auth]=\"auth.config\" [host]=\"auth.host\" [org_id]=\"auth.org_id\"></app-configuration-google>\n                <app-configuration-okta *ngIf=\"auth.method=='okta'\" [auth]=\"auth.config\" [host]=\"auth.host\" [org_id]=\"auth.org_id\"></app-configuration-okta>\n            </mat-card-content>\n            <mat-card-action fxLayoutAlign=\"end \">\n                <button mat-raised-button color=\"primary\" [disabled]=\"is_working\" (click)=\"saveAuth()\">Save</button>\n            </mat-card-action>\n        </mat-card>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-admin';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n     :host {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n        font-size: 14px;\n        color: #333;\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n    \n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        margin: 8px 0;\n    }\n    \n    p {\n        margin: 0;\n    }\n    \n    .spacer {\n        flex: 1;\n    }\n    \n    .toolbar {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        height: 60px;\n        display: flex;\n        align-items: center;\n        background-color: #1976d2;\n        color: white;\n        font-weight: 600;\n    }\n    \n    .toolbar img {\n        margin: 0 16px;\n    }\n    \n    .toolbar #twitter-logo {\n        height: 40px;\n        margin: 0 16px;\n    }\n    \n    .toolbar #twitter-logo:hover {\n        opacity: 0.8;\n    }\n    \n    .content {\n        display: flex;\n        margin: 82px auto 32px;\n        padding: 0 16px;\n        max-width: 960px;\n        flex-direction: column;\n        align-items: center;\n    }\n    \n    svg.material-icons {\n        height: 24px;\n        width: auto;\n    }\n    \n    svg.material-icons:not(:last-child) {\n        margin-right: 8px;\n    }\n    \n    .card svg.material-icons path {\n        fill: #888;\n    }\n    \n    .card-container {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        margin-top: 16px;\n    }\n    \n    .card {\n        border-radius: 4px;\n        border: 1px solid #eee;\n        background-color: #fafafa;\n        height: 40px;\n        width: 200px;\n        margin: 0 8px 16px;\n        padding: 16px;\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        transition: all 0.2s ease-in-out;\n        line-height: 24px;\n    }\n    \n    .card-container .card:not(:last-child) {\n        margin-right: 0;\n    }\n    \n    .card.card-small {\n        height: 16px;\n        width: 168px;\n    }\n    \n    .card-container .card:not(.highlight-card) {\n        cursor: pointer;\n    }\n    \n    .card-container .card:not(.highlight-card):hover {\n        transform: translateY(-3px);\n        box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n    }\n    \n    .card-container .card:not(.highlight-card):hover .material-icons path {\n        fill: rgb(105, 103, 103);\n    }\n    \n    .card.highlight-card {\n        background-color: #1976d2;\n        color: white;\n        font-weight: 600;\n        border: none;\n        width: auto;\n        min-width: 30%;\n        position: relative;\n    }\n    \n    .card.card.highlight-card span {\n        margin-left: 60px;\n    }\n    \n    svg#rocket {\n        width: 80px;\n        position: absolute;\n        left: -10px;\n        top: -24px;\n    }\n    \n    svg#rocket-smoke {\n        height: calc(100vh - 95px);\n        position: absolute;\n        top: 10px;\n        right: 180px;\n        z-index: -10;\n    }\n    \n    a,\n    a:visited,\n    a:hover {\n        color: #1976d2;\n        text-decoration: none;\n    }\n    \n    a:hover {\n        color: #125699;\n    }\n    \n    .terminal {\n        position: relative;\n        width: 80%;\n        max-width: 600px;\n        border-radius: 6px;\n        padding-top: 45px;\n        margin-top: 8px;\n        overflow: hidden;\n        background-color: rgb(15, 15, 16);\n    }\n    \n    .terminal::before {\n        content: \"\\2022 \\2022 \\2022\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 4px;\n        background: rgb(58, 58, 58);\n        color: #c2c3c4;\n        width: 100%;\n        font-size: 2rem;\n        line-height: 0;\n        padding: 14px 0;\n        text-indent: 4px;\n    }\n    \n    .terminal pre {\n        font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;\n        color: white;\n        padding: 0 1rem 1rem;\n        margin: 0;\n    }\n    \n    .circle-link {\n        height: 40px;\n        width: 40px;\n        border-radius: 40px;\n        margin: 8px;\n        background-color: white;\n        border: 1px solid #eeeeee;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n        transition: 1s ease-out;\n    }\n    \n    .circle-link:hover {\n        transform: translateY(-0.25rem);\n        box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n    }\n    \n    footer {\n        margin-top: 8px;\n        display: flex;\n        align-items: center;\n        line-height: 20px;\n    }\n    \n    footer a {\n        display: flex;\n        align-items: center;\n    }\n    \n    .github-star-badge {\n        color: #24292e;\n        display: flex;\n        align-items: center;\n        font-size: 12px;\n        padding: 3px 10px;\n        border: 1px solid rgba(27, 31, 35, .2);\n        border-radius: 3px;\n        background-image: linear-gradient(-180deg, #fafbfc, #eff3f6 90%);\n        margin-left: 4px;\n        font-weight: 600;\n        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;\n    }\n    \n    .github-star-badge:hover {\n        background-image: linear-gradient(-180deg, #f0f3f6, #e6ebf1 90%);\n        border-color: rgba(27, 31, 35, .35);\n        background-position: -.5em;\n    }\n    \n    .github-star-badge .material-icons {\n        height: 16px;\n        width: 16px;\n        margin-right: 4px;\n    }\n    \n    svg#clouds {\n        position: fixed;\n        bottom: -160px;\n        left: -230px;\n        z-index: -10;\n        width: 1920px;\n    }\n    /* Responsive Styles */\n    \n    @media screen and (max-width: 767px) {\n        .card-container>*:not(.circle-link),\n        .terminal {\n            width: 100%;\n        }\n        .card:not(.highlight-card) {\n            height: 16px;\n            margin: 8px 0;\n        }\n        .card.highlight-card span {\n            margin-left: 72px;\n        }\n        svg#rocket-smoke {\n            right: 120px;\n            transform: rotate(-5deg);\n        }\n    }\n    \n    @media screen and (max-width: 575px) {\n        svg#rocket-smoke {\n            display: none;\n            visibility: hidden;\n        }\n    }\n</style>\n\n<!-- Toolbar -->\n<mat-toolbar style=\"background-color: rgb(236 236 236); color: gray\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n    <img height=\"100%\" alt=\"Mist Logo\" src=\"/images/juniper.png\" />\n    <span style=\"margin-left: 1em\">Mist PSK</span>\n</mat-toolbar>\n\n\n\n<router-outlet></router-outlet>","import { Component, OnInit, Input } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n\n\n\n@Component({\n  selector: 'app-configuration-okta',\n  templateUrl: './okta.component.html',\n  styleUrls: ['./../../configuration.component.css']\n})\nexport class OktaComponent implements OnInit {\n  @Input() auth: {\n    audience: string,\n    client_id: string,\n    client_secret: string\n  }\n  @Input() host: string\n  @Input() org_id: string\n\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  constructor() { }\n\n  okta = {\n    audience: \"\",\n    client_id: \"\",\n    client_secret: \"\"\n  }\n  login_redirect_url:string;\n  initiate_login_url:string;\n  error_message = \"\"\n  ngOnInit(): void {\n    if (this.auth && this.auth.audience) {\n      this.okta.audience = this.auth.audience;\n      this.okta.client_id = this.auth.client_id;\n      this.okta.client_secret = this.auth.client_secret\n    }\n    else this.okta = {\n      audience: \"\",\n      client_id: \"\",\n      client_secret: \"\"\n    }\n    this.login_redirect_url=\"https://\"+this.host+\"/okta/callback\"\n    this.initiate_login_url=\"https://\"+this.host+\"/okta/\"+this.org_id+\"/login\"\n  }\n\n}\n","<div>\n    <table>\n        <tr>\n            <th>Login redirect URI</th>\n            <td>{{login_redirect_url}}</td>\n        </tr>\n        <tr>\n            <th>Initiate login URI</th>\n            <td>{{initiate_login_url}}</td>\n        </tr>\n    </table>\n</div>\n<div style=\"margin-top: 1em;\">\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>Okta Domain<span style=\"color: red\">*</span></mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"okta.audience\" />\n    </mat-form-field>\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>Client ID<span style=\"color: red\">*</span></mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"okta.client_id\" />\n    </mat-form-field>\n    <mat-form-field style=\"width: 100%\">\n        <mat-label>Client Secret<span style=\"color: red\">*</span></mat-label>\n        <input matInput type=\"password\" [(ngModel)]=\"okta.client_secret\" />\n    </mat-form-field>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { TwoFactorDialog } from './login/login-2FA';\nimport { OrgSelectComponent } from './org-select/org-select.component';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { ApitokenManualDialog } from './configuration/configuration.token.manual';\nimport { AdfsComponent } from './configuration/authentication/adfs/adfs.component';\nimport { AzureComponent } from './configuration/authentication/azure/azure.component';\nimport { GoogleComponent } from './configuration/authentication/google/google.component';\nimport { OktaComponent } from './configuration/authentication/okta/okta.component';\nimport { ConfirmDialog } from './configuration/configuration.confirm';\n//import { CustomizationComponent } from './customization/customization.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent, TwoFactorDialog,\n    AdfsComponent, GoogleComponent, OktaComponent, AzureComponent,\n    ConfigurationComponent, ConfirmDialog,\n    ApitokenManualDialog,\n    OrgSelectComponent,\n    //    CustomizationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\nimport { MatChipInputEvent } from '@angular/material/chips';\n\n@Component({\n  selector: 'app-configuration-azure',\n  templateUrl: './azure.component.html',\n  styleUrls: ['./../../configuration.component.css']\n})\nexport class AzureComponent implements OnInit {\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  @Input() auth: {\n    client_id: string,\n    client_secret: string,\n    tenant: string,\n    resource: string,\n    allow_external_users: boolean,\n    allow_unlicensed_filter: boolean,\n    user_groups: string[]\n  }\n  @Input() host: string\n  @Input() org_id: string\n\n  constructor() { }\n\n\n    azure= {\n      client_id: \"\",\n      client_secret: \"\",\n      tenant: \"\",\n      resource: \"\",\n      allow_external_users: false,\n      allow_unlicensed_filter: false,\n      user_groups: []\n    }\n    callback:string;\n    signin:string;\n\n  ngOnInit(): void {\n    if (this.auth && this.auth.client_id) {\n      this.azure.client_id = this.auth.client_id;\n      this.azure.client_secret = this.auth.client_secret;\n      this.azure.tenant = this.auth.tenant;\n      this.azure.resource = this.auth.resource;\n      this.azure.allow_external_users = this.auth.allow_external_users;\n      this.azure.allow_unlicensed_filter = this.auth.allow_unlicensed_filter;\n      this.azure.user_groups = this.auth.user_groups;\n    }\n    else this.azure= {\n      client_id: \"\",\n      client_secret: \"\",\n      tenant: \"\",\n      resource: \"\",\n      allow_external_users: false,\n      allow_unlicensed_filter: false,\n      user_groups: []\n    }\n    this.callback=\"https://\"+this.host+\"/azure/callback\"\n    this.signin=\"https://\"+this.host+\"/azure/\"+this.org_id+\"/login\"  }\n\n\n\n    add(event: MatChipInputEvent): void {\n      const input = event.input;\n      const value = event.value;\n  \n      if ((value || '').trim()) {\n        if (this.azure.user_groups.indexOf(value.trim()) < 0) {\n            this.azure.user_groups.push(value.trim());\n        }\n      }\n      // Reset the input value\n      if (input) {\n        input.value = '';\n      }\n    }\n  \n    remove(user_group: String): void {\n      const index = this.azure.user_groups.indexOf(user_group);\n  \n      if (index >= 0) {\n        this.azure.user_groups.splice(index, 1);\n      }\n    }\n\n  isValid() {\n      if (!this.azure.client_id || this.azure.client_id == \"\") return false;\n      else if (!this.azure.client_secret || this.azure.client_secret == \"\") return false;\n      else if (!this.azure.tenant || this.azure.tenant == \"\") return false;\n      else if (!this.azure.resource || this.azure.resource == \"\") return false;\n      else return true;\n  };\n\n}\n","<table>\n    <tr>\n        <th>Signin URL</th>\n        <td>{{signin}}</td>\n    </tr>\n    <tr>\n        <th>Callback URL</th>\n        <td>{{callback}}</td>\n    </tr>\n    <tr>\n        <th>Logout URL</th>\n        <td>{{signin}}</td>\n    </tr>\n</table>\n<div>\n    <!-- <mat-form-field>\n        <mat-checkbox [(ngModel)]=\"azure.allow_external_users\">Allow External Users</mat-checkbox>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-checkbox [(ngModel)]=\"azure.allow_unlicensed_filter\">Allow Users without license</mat-checkbox>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Allowed Groups (Empty to not filter on User Groups)</mat-label>\n        <mat-chip-list #chipList aria-label=\"Allowed selection\">\n            <mat-chip *ngFor=\"let user_group of azure.user_groups\" [selectable]=\"true\" [removable]=\"true\" (removed)=\"remove(user_group)\">\n                {{user_group}}\n                <mat-icon matChipRemove>cancel</mat-icon>\n            </mat-chip>\n            <input placeholder=\"New User Group...\" [matChipInputFor]=\"chipList\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"true\" (matChipInputTokenEnd)=\"add($event)\">\n        </mat-chip-list>\n    </mat-form-field> -->\n</div>\n<div fxLayout=\"column\">\n    <mat-form-field>\n        <mat-label>Client ID<span style=\"color: red\">*</span></mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"azure.client_id\" />\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Client Secret<span style=\"color: red\">*</span></mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"azure.client_secret\" />\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Tenant<span style=\"color: red\">*</span></mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"azure.tenant\" />\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Resource<span style=\"color: red\">*</span></mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"azure.resource\" />\n    </mat-form-field>\n\n\n</div>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'configuration.confirm',\n    templateUrl: 'configuration.confirm.html',\n})\nexport class ConfirmDialog {\n    constructor(\n        public dialogRef: MatDialogRef<ConfirmDialog>, @Inject(MAT_DIALOG_DATA) public data) { }\n\n\n    cancelConfirm(): void {\n        this.dialogRef.close(false);\n    }\n    confirm(): void {\n        this.dialogRef.close(true)\n    }\n}","<h1 mat-dialog-title>\n    {{data.title}}</h1>\n<mat-dialog-content>\n    <div>{{data.message}}</div>\n</mat-dialog-content>\n<div mat-dialog-actions fxLayoutAlign=\"center space-around\">\n    <button mat-button (click)=\"cancelConfirm()\" cdkFocusInitial>Cancel</button>\n    <button mat-button color=\"primary\" [mat-dialog-close]=\"confirm\" type=\"submit\">Confirm</button>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\nimport { ErrorDialog } from '../../../common/error'\n\n@Component({\n  selector: 'app-configuration-adfs',\n  templateUrl: './adfs.component.html',\n  styleUrls: ['./../../configuration.component.css']\n})\nexport class AdfsComponent implements OnInit {\n\n  @Input()  auth: {\n    server: string,\n    entity_id: string,\n    login_url: string,\n    logout_url: string,\n    entry_point: string,\n    certs: string[],\n    metadata: string\n  }\n  \n  constructor() { }\n  \n  adfs: {\n    server: string,\n    entity_id: string,\n    login_url: string,\n    logout_url: string,\n    entry_point: string,\n    certs: string[],\n    metadata: string\n  }\n\n  ngOnInit(): void { \n    if (this.auth && this.auth.metadata){\n      this.adfs = {\n        server: this.auth.server,\n        entity_id: this.auth.entity_id,\n        login_url: this.auth.login_url,\n        logout_url: this.auth.logout_url,\n        entry_point: this.auth.entry_point,\n        certs: this.auth.certs,\n        metadata: this.auth.metadata\n      }      \n    }else{\n      this.adfs = {\n        server: \"\",\n        entity_id: \"\",\n        login_url: \"\",\n        logout_url: \"\",\n        entry_point: \"\",\n        certs: [],\n        metadata: \"\"\n      }\n    }\n  }\n\n  changeAdfsMetadata(e) {\n    this.adfs.server = \"\";\n    this.adfs.entity_id = \"\";\n    this.adfs.login_url = \"\";\n    this.adfs.logout_url = \"\";\n    this.adfs.entry_point = \"\";\n    this.adfs.certs = [];\n\n    if (this.adfs.metadata) {\n      var start, stop;\n\n      start = this.adfs.metadata.indexOf(\"entityID=\") + 10;\n      if (start) this.adfs.entity_id = this.adfs.metadata.substring(start, this.adfs.metadata.indexOf(\"\\\"\", start));\n      start = -1;\n\n      start = this.adfs.metadata.indexOf(\"SingleSignOnService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\"\");\n      if (start) start = this.adfs.metadata.indexOf(\"Location=\", start) + 10;\n      if (start) this.adfs.login_url = this.adfs.metadata.substring(start, this.adfs.metadata.indexOf(\"\\\"\", start));\n\n      if (this.adfs.login_url) this.adfs.entry_point = this.adfs.login_url,\n\n      start = -1;\n      start = this.adfs.metadata.indexOf(\"SingleLogoutService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\"\");\n      if (start) start = this.adfs.metadata.indexOf(\"Location=\", start) + 10;\n      if (start) this.adfs.logout_url = this.adfs.metadata.substring(start, this.adfs.metadata.indexOf(\"\\\"\", start));\n\n      start = 0;\n      stop = 0;\n      var i = 0;\n      while (start >= 0 && i < 10) {\n        start = this.adfs.metadata.indexOf(\"<X509Certificate>\", stop);\n        if (start > 0) {\n          stop = this.adfs.metadata.indexOf(\"</X509Certificate>\", start);\n          var cert = this.adfs.metadata.substring(start + 17, stop);\n          if (this.adfs.certs.indexOf(cert) < 0) this.adfs.certs.push(cert);\n        } else break;\n        i++;\n      }      \n    }\n  }\n\n  adfsCert() {\n    if (this.adfs.server) return \"https://\" + this.adfs.server + \"/FederationMetadata/2007-06/FederationMetadata.xml\";\n    else return false;\n  };\n\n  isValid() {\n    if (!this.adfs.entity_id || this.adfs.entity_id == \"\") return false;\n    else if (!this.adfs.login_url || this.adfs.login_url == \"\") return false;\n    else if (!this.adfs.logout_url || this.adfs.logout_url == \"\") return false;\n    else return true;\n  };\n\n\n}\n","<div mat-whiteframe=\"5\" style=\"margin:15px 0 20px 0\">\n    <mat-toolbar class=\"mat-hue-2\" style=\"height: 40px;min-height: 40px;\">\n        <div class=\"mat-toolbar-tools\">\n            <span>ADFS Metadata</span>\n        </div>\n    </mat-toolbar>\n    <div layout-margin>\n        <div>To use this app with your ADFS, you will have to import your ADFS Metadata.</div>\n        <div>To retrieve your ADFS Metadata, you can manually download the metadata.xml file, or indicate your ADFS FQDN below and use the \"Download\" Button\n        </div>\n    </div>\n    <div fxLayout=\"row\">\n        <mat-form-field appearance=\"outline\" style=\"width: 25em\">\n            <mat-label>ADFS Server IP/FQDN</mat-label>\n            <input matInput id=\"adfsServer\" type=\"text\" [(ngModel)]=\"adfs.server\" />\n        </mat-form-field>\n        <div style=\"margin:1em\">\n\n            <a mat-button [disabled]=\"adfs.server==''\" color=\"primary\" [href]=\"adfsCert()\" target=\"_blank\">Download ADFS Metadata</a>\n        </div>\n    </div>\n    <div layout-margin>Once you have the xml Metadata file, just edit it, and copy/paste the content below\n    </div>\n    <div layout=\"column\" layout-margin>\n        <mat-form-field style=\"width: 100%\" appearance=\"outline\">\n            <mat-label>ADFS Metadata<span style=\"color: red\">*</span></mat-label>\n            <textarea matInput [(ngModel)]=\"adfs.metadata\" (ngModelChange)=\"changeAdfsMetadata($event)\" cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"20\"></textarea>\n        </mat-form-field>\n\n        <div layout=\"column\">\n            <table>\n                <tr>\n                    <th>Entity ID</th>\n                    <td>\n                        <div *ngIf=\"adfs.entity_id!=''\" fxLayout=\"row\">\n                            <div>{{adfs.entity_id}}</div>\n                            <div class=\"material-icons green\">done</div>\n                        </div>\n                        <div *ngIf=\"adfs.entity_id==''\" fxLayout=\"row\">\n                            <div class=\"material-icons red\">close</div>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <th>Login URL</th>\n                    <td>\n                        <div *ngIf=\"adfs.login_url!=''\" fxLayout=\"row\">\n                            <div>{{adfs.login_url}}</div>\n                            <div class=\"material-icons green\">done</div>\n                        </div>\n                        <div *ngIf=\"adfs.login_url==''\" fxLayout=\"row\">\n                            <div class=\"material-icons red\">close</div>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <th>Logout URL</th>\n                    <td>\n                        <div *ngIf=\"adfs.logout_url!=''\" fxLayout=\"row\">\n                            <div>{{adfs.logout_url}}</div>\n                            <div class=\"material-icons green\">done</div>\n                        </div>\n                        <div *ngIf=\"adfs.logout_url==''\" fxLayout=\"row\">\n                            <div class=\"material-icons red\">close</div>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <th>X509 Certificate</th>\n                    <td>\n                        <div *ngIf=\"adfs.certs.length>0\" fxLayout=\"row\">\n                            <div class=\"material-icons green\">done</div>\n                        </div>\n                        <div *ngIf=\"adfs.certs.length==0\" fxLayout=\"row\">\n                            <div class=\"material-icons red\">close</div>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n\n        </div>\n\n    </div>\n</div>\n<div mat-whiteframe=\"5\" style=\"margin:15px 0 20px 0\">\n    <mat-toolbar class=\"mat-hue-2\" style=\"height: 40px;min-height: 40px;\">\n        <div class=\"mat-toolbar-tools\">\n            <span>APP Metdata</span>\n        </div>\n    </mat-toolbar>\n    <div layout-margin>You will have create a \"Relying Party Trust\" on your ADFS. To do so, you can download the App Metadata (including its certificate) by using the button below.</div>\n    <a mat-raised-button href=\"/api/admin/auth/cert\" translate=\"authentication.adfs.getAppCertificate\" aria-label=\"Get App Certificate\">Download App Metadata</a>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component'\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { OrgSelectComponent } from './org-select/org-select.component';\n//import { CustomizationComponent } from './customization/customization.component';\nconst routes: Routes = [\n  { path: 'admin/login', component: LoginComponent },\n  { path: 'admin/orgs', component: OrgSelectComponent },\n  {path: 'admin/config', component: ConfigurationComponent},\n  //  { path: 'customization', component: CustomizationComponent },\n  { path: '', redirectTo: '/admin/login', pathMatch: 'full' }, // redirect to `first-component`\n  { path: '**', redirectTo: '/admin/login' }, // redirect to `first-component`\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'corrected' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { PlatformLocation } from '@angular/common';\nimport { TwoFactorDialog } from './login-2FA';\n\nexport interface TwoFactorData {\n  twoFactor: string;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n\nexport class LoginComponent implements OnInit {\n\n  constructor(private _formBuilder: FormBuilder, private _http: HttpClient, private _router: Router, public _dialog: MatDialog, private _platformLocation: PlatformLocation\n  ) { }\n\n  host: string = \"\";\n  show_github_fork_me: boolean = false;\n  hostnames_to_show_github_fork_me = [\"mso.mist-lab.fr\"];\n  loading: boolean;\n  hosts = [\n    { value: 'api.mist.com', viewValue: 'US - manage.mist.com' },\n    { value: 'api.eu.mist.com', viewValue: 'EU - manage.eu.mist.com' },\n    { value: 'api.gc1.mist.com', viewValue: 'GCP - manage.gc1.mist.com' }\n  ];\n\n  // LOGIN FORM\n  frmStepLogin = this._formBuilder.group({\n    host: [''],\n    username: [''],\n    password: ['']\n  });\n  error_message = ''\n\n\n  //// INIT ////\n  ngOnInit(): void {\n    if (this.hostnames_to_show_github_fork_me.indexOf(this._platformLocation.hostname) >= 0) {\n      this.show_github_fork_me = true;\n    }\n    this.frmStepLogin = this._formBuilder.group({\n      host: ['api.mist.com'],\n      username: [''],\n      password: ['']\n    });\n  }\n\n  //// COMMON ////\n  check_host(): boolean {\n    if (this.frmStepLogin.value.host != '') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // RESET AUTHENTICATION FORM\n  reset_response(): void {\n    this.host = null;\n    this.error_message = ''\n  }\n\n  // PARSE AUTHENTICATION RESPONSE FROM SERVER\n  parse_response(data): void {\n    this.loading = false;\n    if (\"error\" in data) {\n      this.error_message = data.error;\n    } else if (\"result\" in data) {\n      if (data.result == \"two_factor_required\") {\n        this.open2FA()\n      }\n      else if (data.result == \"success\") {\n        this.authenticated()\n      } else this.error_message = \"Unkown error\"\n    } else this.error_message = \"Unkown error\"\n\n  }\n\n  // WHEN AUTHENTICATION IS NOT OK\n  parse_error(message): void {\n    this.loading = false;\n    console.log(message)\n    this.error_message = message;\n  }\n\n\n  // WHEN AUTHENTICATION IS OK\n  authenticated(): void {\n    this.loading = false;\n    this._router.navigate(['/admin/orgs']);\n  }\n\n  //// AUTHENTICATION ////\n  submitCredentials(): void {\n    this.reset_response();\n    if (this.check_host()) {\n      this.loading = true;\n      this._http.post<any>('/api/admin/login', { host: this.frmStepLogin.value.host, username: this.frmStepLogin.value.username, password: this.frmStepLogin.value.password }).subscribe({\n        next: data => this.parse_response(data),\n        error: error => this.parse_error(error.error)\n      })\n    }\n  }\n  submit2FA(twoFactor: number): void {\n    if (this.check_host()) {\n      this.loading = true;\n      console.log(this.frmStepLogin)\n      this._http.post<any>('/api/admin/login', { host: this.frmStepLogin.value.host, username: this.frmStepLogin.value.username, password: this.frmStepLogin.value.password, two_factor_code: twoFactor }).subscribe({\n        next: data => this.parse_response(data),\n        error: error => this.parse_error(error.error)\n      })\n    }\n  }\n\n  //// DIALOG BOX ////\n  open2FA(): void {\n    const dialogRef = this._dialog.open(TwoFactorDialog, {});\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) { this.submit2FA(result) }\n    });\n  }\n}","<mat-card class=\"card-outer\">\n\n    <div class=\"login-form-outer\" fxLayout=\"column\">\n        <div class=\"login-form-inner\">\n\n            <div [formGroup]=\"frmStepLogin\" fxLayout=\"column\" class=\"login-form-inputs mat-elevation-z1\">\n                <h1>Log In with your Mist Account</h1>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Mist Cloud</mat-label>\n                    <mat-select formControlName=\"host\">\n                        <mat-option *ngFor=\"let host of hosts \" [value]=\"host.value\">\n                            {{host.viewValue}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"username\" type=\"email\">\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" formControlName=\"password\" (keydown.enter)=\"submitCredentials()\" />\n                </mat-form-field>\n                <div style=\"margin-bottom: 1em; min-height: 20px;\">\n                    <span style=\"color:red; font-weight: normal; \">{{error_message}}</span>\n                </div>\n                <div></div>\n                <button mat-raised-button color=\"primary\" (click)=\"submitCredentials()\">\n                    Log In\n                </button>\n            </div>\n\n            <div class=\"loading\" fxLayout=\"row\" *ngIf=\"loading\">\n                <div fxLayout=\"column\">\n                    <mat-spinner></mat-spinner>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</mat-card>\n\n<div *ngIf=\"show_github_fork_me\" class=\"github-fork-me\">\n    <a class=\"github-fork-me\" href=\"https://github.com/tmunzer/mist_claim_web_ui\" target=\"_blank\"><img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=149%2C149\" class=\"attachment-full size-full\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\"></a>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}